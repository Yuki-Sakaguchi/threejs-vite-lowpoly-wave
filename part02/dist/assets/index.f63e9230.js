import*as e from"https://unpkg.com/three@0.126.1/build/three.module.js";import{G as t,g as n}from"./vendor.d7829961.js";const i={x:void 0,y:void 0},o=50;function a(){m.geometry.dispose(),m.geometry=new e.PlaneGeometry(r.plane.width,r.plane.height,r.plane.widthSegments,r.plane.heightSegments);const{array:t}=m.geometry.attributes.position,n=[];for(let e=0;e<t.length;e++){if(e%3==0){const n=t[e],i=t[e+1],o=t[e+2];t[e]=n+3*(Math.random()-.5),t[e+1]=i+3*(Math.random()-.5),t[e+2]=o+3*(Math.random()-.5)}n.push(Math.random()*Math.PI*2)}m.geometry.attributes.position.originalPosition=m.geometry.attributes.position.array,m.geometry.attributes.position.randomValues=n;const i=[];for(let e=0;e<m.geometry.attributes.position.count;e++)i.push(0,.19,.4);m.geometry.setAttribute("color",new e.BufferAttribute(new Float32Array(i),3))}const s=new t,r={plane:{width:400,height:400,widthSegments:50,heightSegments:50}};s.add(r.plane,"width",1,500).onChange(a),s.add(r.plane,"height",1,500).onChange(a),s.add(r.plane,"widthSegments",1,100).onChange(a),s.add(r.plane,"heightSegments",1,100).onChange(a),s.close();const d=new e.Raycaster,h=new e.Scene,g=new e.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);g.position.z=o,g.rotation.x=0;const c=new e.WebGLRenderer({alpha:!0});c.setSize(window.innerWidth,window.innerHeight),c.setPixelRatio(window.devicePixelRatio),document.body.appendChild(c.domElement);const l=new e.PlaneGeometry(r.plane.width,r.plane.height,r.plane.widthSegments,r.plane.heightSegments),w=new e.MeshPhongMaterial({side:e.DoubleSide,flatShading:e.FlatShading,vertexColors:!0}),m=new e.Mesh(l,w);h.add(m),a();const p=new e.DirectionalLight(16777215,1);p.position.set(0,1,1),h.add(p);const u=new e.DirectionalLight(16777215,1);u.position.set(0,0,-1),h.add(u);let b=0;!function e(){requestAnimationFrame(e),c.render(h,g),b+=.01,d.setFromCamera(i,g);const{array:t,originalPosition:o,randomValues:a}=m.geometry.attributes.position;for(let n=0;n<t.length;n+=3)t[n]=o[n]+.01*Math.cos(b+a[n]),t[n+1]=o[n+1]+.001*Math.cos(b+a[n]);m.geometry.attributes.position.needsUpdate=!0;const s=d.intersectObject(m);if(s.length>0){const{color:e}=s[0].object.geometry.attributes,t={r:0,g:.19,b:.4},i={r:.1,g:.5,b:1};n.to(i,{r:t.r,g:t.g,b:t.b,duration:1,onUpdate(){e.setX(s[0].face.a,i.r),e.setY(s[0].face.a,i.g),e.setZ(s[0].face.a,i.b),e.setX(s[0].face.b,i.r),e.setY(s[0].face.b,i.g),e.setZ(s[0].face.b,i.b),e.setX(s[0].face.c,i.r),e.setY(s[0].face.c,i.g),e.setZ(s[0].face.c,i.b),e.needsUpdate=!0}})}}(),window.addEventListener("mousemove",(e=>{i.x=e.clientX/innerWidth*2-1,i.y=-e.clientY/innerHeight*2+1}));let f=0;const y=()=>{const e=window.innerWidth,t=window.innerHeight;c.setPixelRatio(window.devicePixelRatio),c.setSize(e,t),g.aspect=e/t,g.updateProjectionMatrix(),document.body.clientHeight,window.innerHeight};window.addEventListener("load",(()=>{document.body.clientHeight,window.innerHeight})),window.addEventListener("resize",(()=>{f&&clearTimeout(f),f=setTimeout(y,200)})),window.addEventListener("scroll",(e=>{g.position.setY(.1*window.pageYOffset),g.position.setZ(Math.max(2,o-.134*window.pageYOffset)),g.rotation.x=Math.min(1.5,.004*window.pageYOffset),console.log(g.rotation.x)}));
